#!/usr/bin/env bash

# Deploy script for nightly snapshots.
#
# Expects to be run against a directory with checked out repositories for:
#
#   - playframework
#   - scalatestplus-play
#   - play-ebean
#   - play-slick
#   - twirl
#   - omnidoc
#   - play-generated-docs

set -e

# process arguments

unset DEPLOY
declare BRANCH="master"
declare -a args

while [[ $# -gt 0 ]] ; do
  case "$1" in
    -b|--branch) BRANCH=$2; shift 2 ;;
    *) args=("${args[@]}" "$1"); shift ;;
  esac
done
set -- "${args[@]}"

DEPLOY=$1

if [ -z "$DEPLOY" ] ; then
  DEPLOY=$(pwd)
fi

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
source "$DIR/utils"

# checkout branches and extract versions

echo "Checking out branches and extracting versions..."

pushd $DEPLOY

checkout $DEPLOY/playframework $BRANCH
PLAY_VERSION=$(stamped base_version)

checkout $DEPLOY/scalatestplus-play $BRANCH
SCALATESTPLUS_PLAY_VERSION=$(stamped base_version)

checkout $DEPLOY/play-ebean $BRANCH
PLAY_EBEAN_VERSION=$(stamped base_version)

checkout $DEPLOY/play-slick $BRANCH
PLAY_SLICK_VERSION=$(stamped base_version)

checkout $DEPLOY/twirl $BRANCH
TWIRL_VERSION=$(stamped base_version)

# build and publish snapshots

echo
echo --- Building snapshots
echo
echo "               play: $PLAY_VERSION"
echo " scalatestplus-play: $SCALATESTPLUS_PLAY_VERSION"
echo "              anorm: $ANORM_VERSION"
echo "         play-ebean: $PLAY_EBEAN_VERSION"
echo "         play-slick: $PLAY_SLICK_VERSION"
echo "              twirl: $TWIRL_VERSION"
echo "            omnidoc: $PLAY_VERSION"

export PLAY_VERSION

echo
echo --- twirl $TWIRL_VERSION
echo

cd $DEPLOY/twirl
build $TWIRL_VERSION +publish

echo
echo --- play $PLAY_VERSION
echo

cd $DEPLOY/playframework
build $PLAY_VERSION +publish

echo
echo --- scalatestplus-play $SCALATESTPLUS_PLAY_VERSION
echo

cd $DEPLOY/scalatestplus-play
build $SCALATESTPLUS_PLAY_VERSION +publish

echo
echo --- play-ebean $PLAY_EBEAN_VERSION
echo

cd $DEPLOY/play-ebean
build $PLAY_EBEAN_VERSION +publish

echo
echo --- play-slick $PLAY_SLICK_VERSION
echo

cd $DEPLOY/play-slick
build $PLAY_SLICK_VERSION +publish

echo
echo --- nightly status update
echo

# This gets done before omnidoc because SNAPSHOT versions don't depend on omnidoc by default, so it's better to
# publish the most recent build success regardless of whether omnidoc passes or fails
mkdir -p ~/.interplay/$BRANCH
cat - > ~/.interplay/$BRANCH/status.json <<STATUSJSON
{
  "date": "$(date +"%Y-%m-%d")",
  "branch": "master",
  "versions": {
    "play": "$PLAY_VERSION",
    "scalatestplus-play": "$SCALATESTPLUS_PLAY_VERSION",
    "play-ebean": "$PLAY_EBEAN_VERSION",
    "play-slick": "$PLAY_SLICK_VERSION",
    "twirl": "$TWIRL_VERSION"
  }
}
STATUSJSON

echo
echo --- omnidoc $PLAY_VERSION
echo

versions=""
versions="$versions -Dplay.version=$PLAY_VERSION"
versions="$versions -Dscalatestplus-play.version=$SCALATESTPLUS_PLAY_VERSION"
versions="$versions -Dplay-ebean.version=$PLAY_EBEAN_VERSION"
versions="$versions -Dplay-slick.version=$PLAY_SLICK_VERSION"
versions="$versions -Dtwirl.version=$TWIRL_VERSION"

checkout $DEPLOY/omnidoc $BRANCH
sbt $versions +publish

echo
echo --- play-generated-docs
echo

$DEPLOY/omnidoc/bin/deploy --branch $BRANCH $DEPLOY/play-generated-docs


# cleanup

popd
unset PLAY_VERSION
